/* tslint:disable */
/* eslint-disable */
/**
 * Dapp Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './User';
import type { MediaType } from './MediaType';
import {
    MediaTypeFromJSON,
    MediaTypeFromJSONTyped,
    MediaTypeToJSON,
} from './MediaType';

/**
 * 
 * @export
 * @interface Media
 */
export interface Media {
    /**
     * 
     * @type {number}
     * @memberof Media
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof Media
     */
    url: string;
    /**
     * 
     * @type {Date}
     * @memberof Media
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Media
     */
    updatedAt?: Date;
    /**
     * 
     * @type {MediaType}
     * @memberof Media
     */
    mediaType: MediaType;
    /**
     * 
     * @type {string}
     * @memberof Media
     */
    userId?: string | null;
    /**
     * 
     * @type {User}
     * @memberof Media
     */
    user?: User;
}

/**
 * Check if a given object implements the Media interface.
 */
export function instanceOfMedia(value: object): value is Media {
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('mediaType' in value) || value['mediaType'] === undefined) return false;
    return true;
}

export function MediaFromJSON(json: any): Media {
    return MediaFromJSONTyped(json, false);
}

export function MediaFromJSONTyped(json: any, ignoreDiscriminator: boolean): Media {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'url': json['url'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
        'mediaType': MediaTypeFromJSON(json['mediaType']),
        'userId': json['userId'] == null ? undefined : json['userId'],
        'user': json['user'] == null ? undefined : UserFromJSON(json['user']),
    };
}

export function MediaToJSON(value?: Media | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'url': value['url'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
        'mediaType': MediaTypeToJSON(value['mediaType']),
        'userId': value['userId'],
        'user': UserToJSON(value['user']),
    };
}

