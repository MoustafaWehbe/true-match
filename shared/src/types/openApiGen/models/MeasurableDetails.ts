/* tslint:disable */
/* eslint-disable */
/**
 * Dapp Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MeasurableDetails
 */
export interface MeasurableDetails {
    /**
     * 
     * @type {number}
     * @memberof MeasurableDetails
     */
    min?: number | null;
    /**
     * 
     * @type {number}
     * @memberof MeasurableDetails
     */
    max?: number | null;
    /**
     * 
     * @type {string}
     * @memberof MeasurableDetails
     */
    unitOfMeasure?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MeasurableDetails
     */
    defaultUnitOfMeasure?: string | null;
}

/**
 * Check if a given object implements the MeasurableDetails interface.
 */
export function instanceOfMeasurableDetails(value: object): value is MeasurableDetails {
    return true;
}

export function MeasurableDetailsFromJSON(json: any): MeasurableDetails {
    return MeasurableDetailsFromJSONTyped(json, false);
}

export function MeasurableDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): MeasurableDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'min': json['min'] == null ? undefined : json['min'],
        'max': json['max'] == null ? undefined : json['max'],
        'unitOfMeasure': json['unitOfMeasure'] == null ? undefined : json['unitOfMeasure'],
        'defaultUnitOfMeasure': json['defaultUnitOfMeasure'] == null ? undefined : json['defaultUnitOfMeasure'],
    };
}

export function MeasurableDetailsToJSON(value?: MeasurableDetails | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'min': value['min'],
        'max': value['max'],
        'unitOfMeasure': value['unitOfMeasure'],
        'defaultUnitOfMeasure': value['defaultUnitOfMeasure'],
    };
}

