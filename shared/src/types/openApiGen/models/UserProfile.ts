/* tslint:disable */
/* eslint-disable */
/**
 * Dapp Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserProfileGender } from './UserProfileGender';
import {
    UserProfileGenderFromJSON,
    UserProfileGenderFromJSONTyped,
    UserProfileGenderToJSON,
} from './UserProfileGender';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './User';
import type { Point } from './Point';
import {
    PointFromJSON,
    PointFromJSONTyped,
    PointToJSON,
} from './Point';

/**
 * 
 * @export
 * @interface UserProfile
 */
export interface UserProfile {
    /**
     * 
     * @type {number}
     * @memberof UserProfile
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof UserProfile
     */
    bio?: string | null;
    /**
     * 
     * @type {number}
     * @memberof UserProfile
     */
    ageFilterMax?: number | null;
    /**
     * 
     * @type {number}
     * @memberof UserProfile
     */
    ageFilterMin?: number | null;
    /**
     * 
     * @type {number}
     * @memberof UserProfile
     */
    distanceFilter?: number | null;
    /**
     * 
     * @type {Point}
     * @memberof UserProfile
     */
    pos?: Point;
    /**
     * 
     * @type {any}
     * @memberof UserProfile
     */
    location?: any | null;
    /**
     * 
     * @type {string}
     * @memberof UserProfile
     */
    job?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserProfile
     */
    school?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof UserProfile
     */
    birthDate?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof UserProfile
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof UserProfile
     */
    updatedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof UserProfile
     */
    userId?: string | null;
    /**
     * 
     * @type {User}
     * @memberof UserProfile
     */
    user?: User;
    /**
     * 
     * @type {any}
     * @memberof UserProfile
     */
    selectedDescriptors?: any | null;
    /**
     * 
     * @type {Array<UserProfileGender>}
     * @memberof UserProfile
     */
    userProfileGenders?: Array<UserProfileGender> | null;
}

/**
 * Check if a given object implements the UserProfile interface.
 */
export function instanceOfUserProfile(value: object): value is UserProfile {
    return true;
}

export function UserProfileFromJSON(json: any): UserProfile {
    return UserProfileFromJSONTyped(json, false);
}

export function UserProfileFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserProfile {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'bio': json['bio'] == null ? undefined : json['bio'],
        'ageFilterMax': json['ageFilterMax'] == null ? undefined : json['ageFilterMax'],
        'ageFilterMin': json['ageFilterMin'] == null ? undefined : json['ageFilterMin'],
        'distanceFilter': json['distanceFilter'] == null ? undefined : json['distanceFilter'],
        'pos': json['pos'] == null ? undefined : PointFromJSON(json['pos']),
        'location': json['location'] == null ? undefined : json['location'],
        'job': json['job'] == null ? undefined : json['job'],
        'school': json['school'] == null ? undefined : json['school'],
        'birthDate': json['birthDate'] == null ? undefined : (new Date(json['birthDate'])),
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
        'userId': json['userId'] == null ? undefined : json['userId'],
        'user': json['user'] == null ? undefined : UserFromJSON(json['user']),
        'selectedDescriptors': json['selectedDescriptors'] == null ? undefined : json['selectedDescriptors'],
        'userProfileGenders': json['userProfileGenders'] == null ? undefined : ((json['userProfileGenders'] as Array<any>).map(UserProfileGenderFromJSON)),
    };
}

export function UserProfileToJSON(value?: UserProfile | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'bio': value['bio'],
        'ageFilterMax': value['ageFilterMax'],
        'ageFilterMin': value['ageFilterMin'],
        'distanceFilter': value['distanceFilter'],
        'pos': PointToJSON(value['pos']),
        'location': value['location'],
        'job': value['job'],
        'school': value['school'],
        'birthDate': value['birthDate'] == null ? undefined : ((value['birthDate'] as any).toISOString()),
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
        'userId': value['userId'],
        'user': UserToJSON(value['user']),
        'selectedDescriptors': value['selectedDescriptors'],
        'userProfileGenders': value['userProfileGenders'] == null ? undefined : ((value['userProfileGenders'] as Array<any>).map(UserProfileGenderToJSON)),
    };
}

