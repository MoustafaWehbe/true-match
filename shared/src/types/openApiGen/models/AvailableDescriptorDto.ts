/* tslint:disable */
/* eslint-disable */
/**
 * Dapp Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Descriptor } from './Descriptor';
import {
    DescriptorFromJSON,
    DescriptorFromJSONTyped,
    DescriptorToJSON,
} from './Descriptor';

/**
 * 
 * @export
 * @interface AvailableDescriptorDto
 */
export interface AvailableDescriptorDto {
    /**
     * 
     * @type {number}
     * @memberof AvailableDescriptorDto
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof AvailableDescriptorDto
     */
    sectionName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof AvailableDescriptorDto
     */
    displayType?: string | null;
    /**
     * 
     * @type {string}
     * @memberof AvailableDescriptorDto
     */
    prompt?: string | null;
    /**
     * 
     * @type {Array<Descriptor>}
     * @memberof AvailableDescriptorDto
     */
    descriptors?: Array<Descriptor> | null;
}

/**
 * Check if a given object implements the AvailableDescriptorDto interface.
 */
export function instanceOfAvailableDescriptorDto(value: object): value is AvailableDescriptorDto {
    return true;
}

export function AvailableDescriptorDtoFromJSON(json: any): AvailableDescriptorDto {
    return AvailableDescriptorDtoFromJSONTyped(json, false);
}

export function AvailableDescriptorDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AvailableDescriptorDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'sectionName': json['sectionName'] == null ? undefined : json['sectionName'],
        'displayType': json['displayType'] == null ? undefined : json['displayType'],
        'prompt': json['prompt'] == null ? undefined : json['prompt'],
        'descriptors': json['descriptors'] == null ? undefined : ((json['descriptors'] as Array<any>).map(DescriptorFromJSON)),
    };
}

export function AvailableDescriptorDtoToJSON(value?: AvailableDescriptorDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'sectionName': value['sectionName'],
        'displayType': value['displayType'],
        'prompt': value['prompt'],
        'descriptors': value['descriptors'] == null ? undefined : ((value['descriptors'] as Array<any>).map(DescriptorToJSON)),
    };
}

