/* tslint:disable */
/* eslint-disable */
/**
 * Dapp Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Coordinate
 */
export interface Coordinate {
    /**
     * 
     * @type {number}
     * @memberof Coordinate
     */
    x?: number;
    /**
     * 
     * @type {number}
     * @memberof Coordinate
     */
    y?: number;
    /**
     * 
     * @type {number}
     * @memberof Coordinate
     */
    z?: number;
    /**
     * 
     * @type {number}
     * @memberof Coordinate
     */
    m?: number;
    /**
     * 
     * @type {Coordinate}
     * @memberof Coordinate
     */
    coordinateValue?: Coordinate;
    /**
     * 
     * @type {boolean}
     * @memberof Coordinate
     */
    readonly isValid?: boolean;
}

/**
 * Check if a given object implements the Coordinate interface.
 */
export function instanceOfCoordinate(value: object): value is Coordinate {
    return true;
}

export function CoordinateFromJSON(json: any): Coordinate {
    return CoordinateFromJSONTyped(json, false);
}

export function CoordinateFromJSONTyped(json: any, ignoreDiscriminator: boolean): Coordinate {
    if (json == null) {
        return json;
    }
    return {
        
        'x': json['x'] == null ? undefined : json['x'],
        'y': json['y'] == null ? undefined : json['y'],
        'z': json['z'] == null ? undefined : json['z'],
        'm': json['m'] == null ? undefined : json['m'],
        'coordinateValue': json['coordinateValue'] == null ? undefined : CoordinateFromJSON(json['coordinateValue']),
        'isValid': json['isValid'] == null ? undefined : json['isValid'],
    };
}

export function CoordinateToJSON(value?: Omit<Coordinate, 'isValid'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'x': value['x'],
        'y': value['y'],
        'z': value['z'],
        'm': value['m'],
        'coordinateValue': CoordinateToJSON(value['coordinateValue']),
    };
}

